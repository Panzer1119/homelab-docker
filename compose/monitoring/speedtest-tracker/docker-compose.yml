#TODO What about zfs auto-snapshots? How do I manage them, how do i set different policies for different volumes?
#- /docker/config/speedtest-tracker:/config
#- /docker/cache/speedtest-tracker/redis:/data
#- /docker/data/speedtest-tracker/postgres:/var/lib/postgresql/data
#TODO What about adding the config/cache/data type at the start of the name, then it sort itself out?
#  e.g. config/speedtest-tracker:/config or cache/speedtest-tracker/redis:/data or data/speedtest-tracker/postgres:/var/lib/postgresql/data
volumes:
  speedtest-tracker:
    name: speedtest-tracker/config
    driver: zfs
  cache:
    name: speedtest-tracker/cache
    driver: zfs
  db:
    name: speedtest-tracker/data
    driver: zfs

services:
  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:0.20.7
    container_name: speedtest-tracker
    ports:
      - 8765:80
    env_file:
      - speedtest-tracker.env
    volumes:
      - speedtest-tracker:/config
    restart: unless-stopped
    depends_on:
      - db
      - cache
    healthcheck:
      test: curl -fSs http://localhost:80/api/healthcheck || exit 1
      interval: 10s
      retries: 3
      start_period: 30s
      timeout: 10s
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

  cache:
    image: redis:6.2-alpine
    env_file:
      - cache.env
    restart: unless-stopped
    #    expose:
    #      - '6379'
    #    ports:
    #      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass $${REDIS_PASSWORD}
    volumes:
      - cache:/data
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

  db:
    image: postgres:15
    restart: always
    env_file:
      - db.env
    #    ports:
    #      - 5434:5432
    volumes:
      - db:/var/lib/postgresql/data
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf
