---
name: immich

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.132.3@sha256:6680d88486251b0264a78a1934fe82eef875555aa6d84d703a0980328a5d5c31
    container_name: immich_server
    depends_on:
      - redis
      - database
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    env_file:
      - immich.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - upload:/usr/src/app/upload
      - nsfw:/mnt/media/nsfw:ro
    labels:
      - "de.panzer1119.docker.volume.default.cifs.host=op://Docker/Immich/CIFS/Host"
      - "de.panzer1119.docker.volume.default.cifs.username=op://Docker/Immich/CIFS/Username"
      - "de.panzer1119.docker.volume.default.cifs.password=op://Docker/Immich/CIFS/Password"
      - "de.panzer1119.docker.volume.immich_upload.cifs.share=op://Docker/Immich/CIFS/Share_Upload"
      - "de.panzer1119.docker.volume.immich_nsfw.cifs.share=op://Docker/Immich/CIFS/Share_NSFW"
    ports:
      - '2283:2283'
    healthcheck:
      disable: false
    restart: unless-stopped
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

  immich-machine-learning:
    # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
    # Example tag: ${IMMICH_VERSION:-release}-cuda
    image: ghcr.io/immich-app/immich-machine-learning:v1.131.3@sha256:d6f07b454c0ec7e4ba3a5926fff2482f8fd1a9922b489122dec33b11a4f37bdd
    container_name: immich_machine_learning
    # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
    #   file: hwaccel.ml.yml
    #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
    env_file:
      - immich.env
    volumes:
      - model-cache:/cache
    healthcheck:
      disable: false
    restart: unless-stopped
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

  redis:
    image: docker.io/redis:6.2-alpine@sha256:3211c33a618c457e5d241922c975dbc4f446d0bdb2dc75694f5573ef8e2d01fa
    container_name: immich_redis
    healthcheck:
      test: redis-cli ping || exit 1
    restart: unless-stopped
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

  database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    container_name: immich_postgres
    env_file:
      - database.env
    volumes:
      - /docker/data/immich/postgres:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped
    extends:
      file: ../../common/docker-compose.yml
      service: logging-gelf

volumes:
  model-cache:
  upload:
    name: immich_upload
    # Because this is a cifs volume, and it needs credentials, it is created outside of this file
    external: true
  nsfw:
    name: immich_nsfw
    # Because this is a cifs volume, and it needs credentials, it is created outside of this file
    external: true
